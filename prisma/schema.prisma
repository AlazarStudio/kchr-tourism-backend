// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum NewsType {
  news
  article
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  login    String @unique
  name     String
  password String
}

model Stories {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  title     String?
  date      DateTime?
  text      String?
  images    String[]
}

model VisitPlaces {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  date      DateTime
  text      String
  images    String[]
}

model News {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  type      NewsType @default(news)
  title     String
  date      DateTime
  text      String
  images    String[]
}

model Project {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  date      DateTime
  text      String
  images    String[]
}

model BS {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  type      String
  title     String
  date      DateTime
  text      String
  images    String[]
}

model Event {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  isCurrent Boolean? @default(false) @map("is_current")
  title     String
  date      DateTime
  city      String
  text      String
  images    String[]
}

model Group {
  id       Int        @id @default(autoincrement())
  title    String
  Document Document[]
}

model Document {
  id      Int    @id @default(autoincrement())
  title   String
  src     String
  Group   Group  @relation(fields: [groupId], references: [id])
  groupId Int
}

model AboutUs {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  text      String
  images    String[]
}
